import base64
import codecs
from typing import Union


def encode_label(data: Union[bytes, str]) -> str:
    if isinstance(data, str):
        data = codecs.encode(data, 'utf8')
    decoded = base64.b32encode(data)
    return codecs.decode(decoded, 'ascii').lower().rstrip('=')


def _b32_padding(data_len):
    return (8 - (data_len % 8)) % 8


def decode_label(data: Union[str, bytes]) -> bytes:
    # Fix padding
    if isinstance(data, bytes):
        data = bytearray(data)
        for _ in range(_b32_padding(len(data))):
            data.append(ord('='))
    else:
        for _ in range(_b32_padding(len(data))):
            data += '='

    return base64.b32decode(data, casefold=True)


def decode_label_to_str(data: str) -> str:
    byte_str = decode_label(data)
    return byte_str.decode('utf8')


if __name__ == "__main__":
    label = "test__label"
    enc = encode_label(label)
    print(label)
    print(enc)
    print(decode_label(enc))

    # Source: https://slideplayer.com/slide/12846144/
    print("\nReal:")
    print(decode_label("nu6timrvguztkobwgyza"))
    print(decode_label("nu6timrshe4timrxhe4a"))
    print(decode_label("7s3bnxqmavqy7sec"))
    print(decode_label("3dc3y7p3zylqyefy"))
    print(decode_label("agw3for7sx5vds5snzs2lbt6tol7zuexuaukx4a52rvf4hrnccjjsx7epe3klne"))
