import base64
import codecs

# https://securitykitten.github.io/2015/07/14/bernhardpos.html
XOR_KEY = [0x0B, 0x0A, 0x17, 0x0D, 0x1A, 0x1F]


def encode_label(data: str) -> str:
    encoded = bytearray()
    for i, char in enumerate(data):
        encoded.append(ord(char) ^ XOR_KEY[i % len(XOR_KEY)] % 0xFF)

    # Pad string to prevent trailing '=' signs
    for _ in range(3 - len(encoded) % 3):
        encoded.append(0x00)

    return codecs.decode(base64.urlsafe_b64encode(encoded), "ascii")


def decode_label(data: str) -> str:
    """
    Source: https://securitykitten.github.io/2015/07/14/bernhardpos.html
    Rewritten to Python and updated to strip trailing padding.
    """

    # Decode and strip trailing padding
    decoded = bytearray(base64.b64decode(data)).rstrip(b'\x00')

    result = ""
    for i, byte in enumerate(decoded):
        result += chr(byte ^ XOR_KEY[i % len(XOR_KEY)] % 0xFF)
    return result


if __name__ == "__main__":
    print(encode_label("490303340561001048=080510109123345678"))  # .29a.de
    print(decode_label("PzMnPiosOD4nOCwuOzomPS4nNjovPS8uOzsnNCstODkjOCwoMwAA"))  # .29a.de
